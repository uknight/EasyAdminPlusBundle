{% extends '@BaseEasyAdmin/default/list.html.twig' %}

{# Do not display SEARCH form if not granted #}
{% block search_action %}
    {% if _entity_config.search is defined and is_easyadmin_granted(_entity_config, 'search', null) %}
        {# Do not display SEARCH at all #}
        {{ parent() }}
    {% endif %}
{% endblock %}

{% block content_header %}
    {{ parent() }}
    {% block content_list_header %}
    {% endblock %}
    {% block filters %}
        {{ include('@LleEasyAdminPlus/default/includes/_filters.html.twig') }}
    {% endblock %}

{% endblock %}


{% block global_actions %}
    <div style="float:right;">
        <div class="button-action">

            {% set _list_item_actions = easyadmin_get_actions_for_list_item(_entity_config.name) %}
            {% set _list_item_actions = _list_item_actions|prune_item_actions(_entity_config, [], null) %}
            {% for action in _list_item_actions if (action.global is defined and action.global) %}
                    {%  if action.confirm is defined %}
                    {%  if action.route is defined %}
                    {% set action_href = path(action.route, action.parameters) %}
                    {% else %}
                    {% set action_href = path(action.name, action.parameters) %}
                    {% endif %}
                    <button
                        class="btn btn-primary lle-confirm"
                        style="margin-right:5px;"
                        id="action_{{action.name}}"
                        data-href="{{ action_href }}"
                        {% if action.confirm.message is defined %}
                        data-message="{{ action.confirm.message|trans }}"
                        {% endif %}
                        {% if action.confirm.xhr is defined %}
                        data-xhr="1"
                        {% if action.confirm.xhr.message %}
                        data-xhr-message = '{{ action.confirm.xhr.message|trans }}'
                        {% endif %}
                        {% if action.confirm.xhr.method %}
                        data-xhr-method = '{{ action.confirm.xhr.method }}'
                        {% endif %}
                        {% endif %}
                        <i class="fa fa-{{ action.icon }}"></i>
                        {{ action.label|trans }}
                    </button>
                    {% elseif action.template is defined %}
                        {{ include('easy_admin/' ~ app.request.query.get('entity') ~'/' ~ action.template) }}
                    {% else %}
                    {%  if action.route is defined %}
                    {% set action_href = path(action.route, action.parameters) %}
                    {% else %}
                    {% set action_href = path(action.name, action.parameters) %}
                    {% endif %}
                    <a class="btn btn-primary" style="margin-right:5px;" id="action_{{action.name}}" href="{{ action_href }}">
                        <i class="fa fa-{{ action.icon }}"></i>
                        {{ action.label|trans }}
                    </a>
                    {% endif %}
            {% endfor %}

            {# EXPORT #}
            {% if _entity_config.export is defined and is_easyadmin_granted(_entity_config, 'export', null) %}
                {% set referer = app.request.server.get('http-referer')|default('/') %}
                {%  for format in _entity_config.export.formats %}
                    <a class="btn btn-primary" style="margin-right:5px;" href="{{ path('easyadmin', app.request.query|merge({ action: "export", format: format })) }}">
                        <i class="fa fa-download"></i>
                        {{ 'exporter.export'|trans({'%format%':format}, 'EasyAdminPlusBundle') }}
                    </a>
                {%  endfor %}
            {% endif %}

            {% if easyadmin_action_is_enabled_for_list_view('new', _entity_config.name) %}
                {% set _action = easyadmin_get_action_for_list_view('new', _entity_config.name) %}
                {% block new_action %}
                    {% if is_easyadmin_granted(_entity_config, 'new', null) %}
                        <a class="{{ _action.css_class|default('') }}" href="{{ path('easyadmin', _request_parameters|merge({ 'action': 'new' })) }}" target="{{ _action.target }}">
                            {% if _action.icon %}<i class="fa fa-{{ _action.icon }}"></i>{% endif %}
                            {{ _action.label is defined and not _action.label is empty ? _action.label|trans(_trans_parameters) }}
                        </a>
                    {% endif %}
                {% endblock new_action %}
            {% endif %}
        </div>

    </div>
{% endblock global_actions %}

{% block body_javascript %}
    {{ parent() }}
    <script type="text/javascript">
        $(document).ready(function(){

            $("body.list .table-responsive table.table").treetable({ expandable: true, nodeIdAttr: 'id', parentIdAttr: 'parentId' });
        });

        var lle = {
            dialog: function(title,msg){
                $('<div>'+msg+'</div>').dialog({title:title});
            },

            ajaxForm: function( $form, callback, type , elm, action){
                var values = {};
                var type = (type)? type:'json';
                var formdata = (window.FormData) ? new FormData($form[0]) : null;
                var data = (formdata !== null) ? formdata : $form.serialize();
                var action = (action)? action:$form.attr( 'action' );
                /*$.each( $form.serializeArray(), function(i, field) {
                  values[field.name] = field.value;
                });*/
                $.ajax({
                    type        : $form.attr( 'method' ),
                    url         : action,
                    contentType : false, // obligatoire pour de l'upload
                    processData : false, // obligatoire pour de l'upload
                    data        : data,
                    dataType    : type,
                    success     : function(data) {
                        //var offset = $(field.id).offset().top
                        //$('html, body').animate({scrollTop: offset}, 'slow');
                        if(elm){
                            callback( elm, data );
                        }else{
                            callback( data );
                        }

                    }
                });
            },

            ajax: function(elm){
                var type = (elm.attr('data-type'))? elm.attr('data-type'):'json';
                if(elm.attr('data-confirm')){
                    if(!confirm(elm.attr('data-confirm'))) return;
                }
                var callback = window[elm.attr('data-callback')];
                var preCallback = (elm.attr('data-pre-callback'))? window[elm.attr('data-pre-callback')]:null;
                var errCallback = (elm.attr('data-err-callback'))? window[elm.attr('data-err-callback')]:null;
                if(preCallback){
                    preCallback(elm);
                }
                var url = (elm.attr('data-url'))? elm.attr('data-url'):elm.attr('href');
                var name = (elm.attr('name'))? elm.attr('name'):null;
                var method = (elm.attr('data-method'))? elm.attr('data-method'):'post';
                var values = {};
                if(elm.attr('data-group')) {
                    $(elm.attr('data-group')).each(function () {
                        if ($(this).attr('type') == 'radio') {
                            if ($(this).is(':checked')) values[$(this).attr('name')] = $(this).val();
                        } else if ($(this).attr('type') == 'checkbox') {
                            if ($(this).is(':checked')) {
                                if (!values[$(this).attr('name')]) values[$(this).attr('name')] = [];
                                values[$(this).attr('name')].push($(this).val());
                            }
                        } else {
                            values[$(this).attr('name')] = $(this).val();
                        }
                    });
                }
                name = (elm.attr('data-name'))? elm.attr('data-name'):elm.attr('name');
                var donnes = (elm.attr('data-donnes'))? JSON.parse(elm.attr('data-donnes').replace(/\'/gi,'"')):[];
                var data = {'data':donnes,'value':elm.val(),'values':values,'name':name};
                if(elm.attr('data-no')) data = null;
                $.ajax({
                    type        : method,
                    url         : url,
                    data        : data,
                    dataType    : type,
                    success     : function(data) {
                        if (callback) callback(elm, data);
                    },
                    error : function(xhr, ajaxOptions, thrownError){
                        if (errCallback) errCallback(elm, xhr, ajaxOptions, thrownError);
                    }
                });
            },

            filter_set_button: function(id, id_button, val) {
                $(id).val(val);
                $(id_button + ' .fa').hide();
                if (val) $(id_button + ' .'+val).show();
                return false;
            }
        }

    </script>

    {{ include('@EasyAdmin/default/includes/_select2_widget.html.twig') }}

    {% if _entity_config.list.hasBatchActions %}
        {{ include('@EasyAdmin/default/includes/_batchs_js.html.twig') }}
    {% endif %}

{% endblock %}

{% block main %}
    {% set _list_item_actions = easyadmin_get_actions_for_list_item(_entity_config.name) %}


    {#{{ include(_entity_config.templates.paginator) }}#}

    {% if _entity_config.list.hasBatchActions %}
        <form action="#" method="POST" name="bulkform">
        {{ include('@EasyAdmin/default/includes/_batchs.html.twig', {'position' : 'top'}) }}
    {% endif %}

    <div class="table-responsive">
        <table class="table datagrid">
            <thead>
            {% block table_head %}
                <tr>

                    {% if _entity_config.list.hasBatchActions %}
                        <td data-priority="0" style="width: 30px;">
                            <input type="checkbox" id="js-all-bulk-checkbox" title="{{'label.batchselectall'|trans({}, 'EasyAdminPlusBundle')}}">
                        </td>
                    {% endif %}

                    {% for field, metadata in fields %}
                        {% set isSortingField = metadata.property == app.request.get('sortField')|split('.')|first %}
                        {% set nextSortDirection = isSortingField ? (app.request.get('sortDirection') == 'DESC' ? 'ASC' : 'DESC') : 'DESC' %}
                        {% set _column_label = (metadata.label ?: field|humanize)|trans(_trans_parameters) %}
                        {% set _column_icon = isSortingField ? (nextSortDirection == 'DESC' ? 'fa-caret-up' : 'fa-caret-down') : 'fa-sort' %}

                        <th data-property-name="{{ metadata.property }}" class="{{ isSortingField ? 'sorted' }} {{ metadata.virtual ? 'virtual' }} {{ metadata.dataType|lower }} {{ metadata.css_class }}" {{ easyadmin_config('design.rtl') ? 'dir="rtl"' }}>
                            {% if metadata.sortable %}
                                <a href="{{ path('easyadmin', _request_parameters|merge({ page: 1, sortField: metadata.property, sortDirection: nextSortDirection })) }}">
                                    <i class="fa {{ _column_icon }}"></i>
                                    {{ _column_label|raw }}
                                </a>
                            {% else %}
                                <span>{{ _column_label|raw }}</span>
                            {% endif %}
                        </th>
                    {% endfor %}

                    {% if _list_item_actions|length > 0 %}
                        <th  {{ easyadmin_config('design.rtl') ? 'dir="rtl"' }}>
                            <span>{{ 'list.row_actions'|trans(_trans_parameters, 'EasyAdminBundle') }}</span>
                        </th>
                    {% endif %}
                </tr>
            {% endblock table_head %}
            </thead>

            <tbody>

            {% block table_body %}

                {# Initialize #}

                {% if _entity_config.tree is defined and _entity_config.tree %}
                    {% set levelShift = (paginator.currentPageResults|first) ? (paginator.currentPageResults|first).lvl : null %}
                    {% set tree_parents = [] %}
                    {% set previous_item = null %}
                    {% set root_item = null %}
                    {% set parent_id = null %}
                {% endif %}

                {% for item in paginator.currentPageResults %}
                    {# the empty string concatenation is needed when the primary key is an object (e.g. an Uuid object) #}
                    {% set _item_id = '' ~ attribute(item, _entity_config.primary_key_field_name) %}

                    {# TREE MANAGMENT #}
                    {% if _entity_config.tree is defined and _entity_config.tree %}

                        {% if root_item != item.root.id %}
                            {% set previous_item = null %}
                            {% set parent_id = null %}
                            {% set root_item = item.root.id %}
                            {% set tree_parents = [] %}
                        {% endif %}
                        {% if previous_item %}
                            {% if previous_item.rgt > item.lft %}{# we go up #}
                                {% set parent_id = previous_item.id %}
                                {% set tree_parents = tree_parents|merge([{
                                'id':previous_item.id,
                                'root':previous_item.root.id,
                                'lft':previous_item.lft,
                                'rgt':previous_item.rgt}]) %}
                            {% else %}
                                {% set tree_parents = tree_parents|slice(0, item.lvl - levelShift) %}
                                {% set parent = tree_parents|last %}
                                {% if parent %}
                                    {% set parent_id = parent.id %}
                                {% endif %}
                            {% endif %}
                        {% endif %}
                    {% endif %}

                    {# ROW #}
                    <tr data-id="{{ _item_id }}"
                        {% if root_item is defined and root_item %}data-root-id="{{root_item}}" {%endif%}
                            {% if parent_id is defined and parent_id %}data-parent-id="{{parent_id}}" {% endif %}
                    >
                        {% if _entity_config.list.hasBatchActions %}
                            <th><input type="checkbox" name="ids[]" value="{{ _item_id }}" class="js-bulk-checkbox"></th>
                        {% endif %}

                        {# FIELDS #}
                        {% for field, metadata in fields %}
                            {% set isSortingField = metadata.property == app.request.get('sortField') %}
                            {% set _column_label =  (metadata.label ?: field|humanize)|trans(_trans_parameters)  %}

                            <td data-label="{{ _column_label }}" class="{{ isSortingField ? 'sorted' }} {{ metadata.dataType|lower }} {{ metadata.css_class }}" {{ easyadmin_config('design.rtl') ? 'dir="rtl"' }}>
                                {%  if metadata.link is defined %}
                                {% set fragment = metadata.tab ?? null %}
                                <a href="{{ path('easyadmin', app.request.query|merge({ action: metadata.link,id: item.id, '_fragment': fragment})) }}">
                                    {%  endif %}
                                    {{ easyadmin_render_field_for_list_view(_entity_config.name, item, metadata) }}
                                    {%  if metadata.link is defined %}</a>{% endif %}
                            </td>
                        {% endfor %}

                        {# ACTIONS #}
                        {% if _list_item_actions|length > 0 %}
                            {% set _column_label =  'list.row_actions'|trans(_trans_parameters, 'EasyAdminBundle') %}
                            <td data-label="{{ _column_label }}" class="actions">
                                {% block item_actions %}
                                    {% set _list_item_actions = _list_item_actions|prune_item_actions(_entity_config, [], item) %}
                                    {{ include('@EasyAdmin/default/includes/_actions.html.twig', {
                                        actions: _list_item_actions,
                                        request_parameters: _request_parameters,
                                        translation_domain: _entity_config.translation_domain,
                                        trans_parameters: _trans_parameters,
                                        item_id: _item_id,
                                        item: item
                                    }, with_context = false) }}
                                {% endblock item_actions %}
                            </td>
                        {% endif %}
                    </tr>
                    {# END ROW #}

                    {% set previous_item = item %}

                    {# NO RESULTS #}
                {% else %}
                    <tr>
                        <td class="no-results" colspan="{{ _list_item_actions|length > 0 ? fields|length + 1 : fields|length }}">
                            {{ 'search.no_results'|trans(_trans_parameters, 'EasyAdminBundle') }}
                        </td>
                    </tr>
                {% endfor %}

            {% endblock table_body %}
            </tbody>
        </table>
    </div>

    {% block batchActions %}
        {% if _entity_config.list.hasBatchActions %}
            {{ include('@EasyAdmin/default/includes/_batchs.html.twig', {'position': 'bottom'})  }}
            </form>
        {% endif %}

    {% endblock batchActions %}


    {#{% block paginator %}
        {{ include(_entity_config.templates.paginator) }}
    {% endblock paginator %}#}

    {% block delete_form %}
        {% set referer = paginator.currentPage == paginator.nbPages and 1 != paginator.currentPage and 1 == paginator.currentPageResults|length
        ? path('easyadmin', app.request.query|merge({ page: app.request.query.get('page') - 1 }))
        : app.request.requestUri
        %}

        {{ include('@EasyAdmin/default/includes/_delete_form.html.twig', {
            view: 'list',
            referer: referer|url_encode,
            delete_form: delete_form_template,
            _translation_domain: _entity_config.translation_domain,
            _trans_parameters: _trans_parameters,
            _entity_config: _entity_config,
        }, with_context = false) }}
    {% endblock delete_form %}

    {% block content_list_footer %}
    {% endblock %}

{% endblock %}
